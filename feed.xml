<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>interview-questions</title>
    <link></link>
    <description>feedgen</description>
    <managingEditor>nobody@gmail.com (nobody)</managingEditor>
    <pubDate>Tue, 28 Nov 2023 21:06:01 +0000</pubDate>
    <item>
      <title>[2023-11-28] interview-questions</title>
      <link></link>
      <description></description>
      <content:encoded><![CDATA[<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" type="text/css" href="https://kpym.github.io/markdown-css/github.min.css">
  </head>
  <body>
    <article class="markdown-body">
<h2 id="codetopmd">codetop.md</h2>
<ul>
<li><a href="https://leetcode.cn/problems/reverse-linked-list">206. 反转链表</a></li>
<li><a href="https://leetcode.cn/problems/generate-parentheses">括号生成</a></li>
<li><a href="https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof">二叉搜索树的第k大节点</a></li>
<li><a href="https://leetcode.cn/problems/maximum-subarray">53. 最大子序和</a></li>
<li><a href="https://leetcode.cn/problems/minimum-path-sum">最小路径和</a></li>
<li><a href="https://leetcode.cn/problems/min-stack">最小栈</a></li>
<li><a href="https://leetcode.cn/problems/single-number">只出现一次的数字</a></li>
<li><a href="https://leetcode.cn/problems/compare-version-numbers">比较版本号</a></li>
<li><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii">删除排序链表中的重复元素 II</a></li>
<li><a href="https://leetcode.cn/problems/invert-binary-tree">翻转二叉树</a></li>
<li><a href="https://leetcode.cn/problems/basic-calculator">基本计算器</a></li>
<li><a href="https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof">二叉搜索树与双向链表</a></li>
<li><a href="https://leetcode.cn/problems/daily-temperatures">每日温度</a></li>
<li><a href="https://leetcode.cn/problems/lru-cache">146. LRU缓存机制</a></li>
<li><a href="https://leetcode.cn/problems/longest-increasing-subsequence">最长上升子序列</a></li>
<li><a href="https://leetcode.cn/problems/remove-nth-node-from-end-of-list">删除链表的倒数第N个节点</a></li>
<li><a href="https://leetcode.cn/problems/edit-distance">编辑距离</a></li>
<li><a href="https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof">用两个栈实现队列</a></li>
<li><a href="https://leetcode.cn/problems/longest-consecutive-sequence">最长连续序列</a></li>
<li><a href="https://leetcode.cn/problems/minimum-window-substring">最小覆盖子串</a></li>
<li><a href="https://leetcode.cn/problems/3sum">15. 三数之和</a></li>
<li><a href="https://leetcode.cn/problems/merge-two-sorted-lists">21. 合并两个有序链表</a></li>
<li><a href="https://leetcode.cn/problems/binary-tree-right-side-view">二叉树的右视图</a></li>
<li><a href="https://leetcode.cn/problems/https://mp.weixin.qq.com/s/0WVa2wIAeG0nYnVndZiEXQ">排序奇升偶降链表</a></li>
<li><a href="https://leetcode.cn/problems/move-zeroes">移动零</a></li>
<li><a href="https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof">数组中的逆序对</a></li>
<li><a href="https://leetcode.cn/problems/majority-element">多数元素</a></li>
<li><a href="https://leetcode.cn/problems/remove-k-digits">移掉K位数字</a></li>
<li><a href="https://leetcode.cn/problems/subarray-sum-equals-k">和为K的子数组</a></li>
<li><a href="https://leetcode.cn/problems/spiral-matrix">螺旋矩阵</a></li>
</ul>
<h2 id="geektime-k8smd">geektime-k8s.md</h2>
<ul>
<li>假设一家公司想要修改其部署方法，并希望构建一个可扩展性和响应性更高的平台。您如何看待这家公司能够实现这一目标以满足他们的客户？.</li>
<li>pod一直处于 pending&rsquo;状态？</li>
<li>查看节点状态失败？</li>
<li>简述什么是 Kubernetes?</li>
<li>POD的ready 状态未进入？&hellip;&hellip;&hellip;</li>
<li>简述Kubernetes 集群联邦？</li>
<li>helm 安装组件失败？</li>
<li>简述Kubernetes Requests 和 Limits 如何影响 Pod 的调度？.</li>
<li>您能否简要介绍一下 Kubernetes 中主节点的工作？</li>
<li>简述kube-proxy 作用？</li>
<li>简述Kubernetes 各模块如何与 API Server通信？</li>
<li>简述Helm 及其优势？</li>
<li>简述Kubernetes 外部如何访问集群内的服务？</li>
<li>筒述 kube-proxy ipvs 原理？</li>
<li>筒述Kubernetes 中 Pod 的健康棯査方式?&hellip;&hellip;</li>
<li>简述Kubernetes 的负载均衡器？.</li>
<li>简述kube-proxy ipvs 和 iptables 的异同？</li>
<li>考虑一种情况，公司希望向具有各种环境的客户提供所有必需的分发。您认为他们如何以动态的方式实现这一关键目标？..</li>
<li>简述Kubernetes deployment 升级过程？</li>
<li>假设一家公司希望通过采用新技术来优化其工作负载的分配。公司如何有效地实现这种资源分配？…</li>
<li>Pod 启动失败如何解决以及常见的原因有哪些…</li>
<li>考虑一家拥有分布式系统的跨国公司，拥有大量数据中心，虛拟机和许多从事各种任务的员工。您认为这样公司如何以与Kubernetes 一致的方式管理所有任务？.-</li>
<li>筒述 Kubernetes 中 Pod 可能位子的状恋？&hellip;..</li>
<li>考虑一家拥有非常分散的系统，拥有大量数据中心，虚拟机以及许多从事各种任务的员工的跨国公司。您认为这样 的公司如何与Kubernetes 一致地管理所有任务？</li>
<li>简述Kubernetes 数据持久化的方式有哪些？.</li>
<li>简述Kubernetes 中什么是Minikube、Kubectl、Kubelet?</li>
<li>简述Kubernetes pv 生命周期内的阶段？</li>
<li>K-集群服务暴露失败？</li>
<li>简述K-label 的几种应用场景。</li>
<li>简述 Kubernetes kubelet 监控 worker 节点资源是使用什么组件来实现的？</li>
</ul>
<h2 id="leetcodemd">leetcode.md</h2>
<ul>
<li><a href="https://leetcode-cn.com/problems/redundant-connection/">684. 冗余连接</a></li>
<li><a href="https://leetcode-cn.com/problems/can-i-win/">464. 我能赢吗</a></li>
<li><a href="https://leetcode-cn.com/problems/permutations-ii/">47. 全排列 II</a></li>
<li><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/">208. 实现 Trie (前缀树)</a></li>
<li><a href="https://leetcode-cn.com/problems/max-points-on-a-line/">149. 直线上最多的点数</a></li>
<li><a href="https://leetcode-cn.com/problems/edit-distance/">72. 编辑距离</a></li>
<li><a href="https://leetcode-cn.com/problems/find-the-duplicate-number/">287. 寻找重复数</a></li>
<li><a href="https://leetcode-cn.com/problems/evaluate-division/">399. 除法求值</a></li>
<li><a href="https://leetcode-cn.com/problems/path-with-minimum-effort/">1631. 最小体力消耗路径</a></li>
<li><a href="https://leetcode-cn.com/problems/rectangle-area-ii/">850. 矩形面积 II</a></li>
<li><a href="https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/">116. 填充每个节点的下一个右侧节点指针</a></li>
<li><a href="https://leetcode-cn.com/problems/find-peak-element/">162. 寻找峰值</a></li>
<li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li>
<li><a href="https://leetcode-cn.com/problems/combinations/">77. 组合</a></li>
<li><a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">209. 长度最小的子数组</a></li>
<li><a href="https://leetcode-cn.com/problems/minimum-window-substring/">76. 最小覆盖子串</a></li>
<li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/">230. 二叉搜索树中第K小的元素</a></li>
<li><a href="https://leetcode-cn.com/problems/24-game/">679. 24 点游戏</a></li>
<li><a href="https://leetcode-cn.com/problems/bus-routes/">815. 公交路线</a></li>
<li><a href="https://leetcode-cn.com/problems/check-if-it-is-a-straight-line/">1232. 缀点成线</a></li>
<li><a href="https://leetcode-cn.com/problems/integer-break/">343. 整数拆分</a></li>
<li><a href="https://leetcode-cn.com/problems/rotting-oranges/">994. 腐烂的橘子</a></li>
<li><a href="https://leetcode-cn.com/problems/word-search/">79. 单词搜索</a></li>
<li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li>
<li><a href="https://leetcode-cn.com/problems/number-of-operations-to-make-network-connected/">1319. 连通网络的操作次数</a></li>
<li><a href="https://leetcode-cn.com/problems/clone-graph/">133. 克隆图</a></li>
<li><a href="https://leetcode-cn.com/problems/word-search-ii/">212. 单词搜索 II</a></li>
<li><a href="https://leetcode-cn.com/problems/maximize-grid-happiness/">1659. 最大化网格幸福感</a></li>
<li><a href="https://leetcode-cn.com/problems/find-median-from-data-stream/">295. 数据流的中位数</a></li>
<li><a href="https://leetcode-cn.com/problems/largest-perimeter-triangle/">976. 三角形的最大周长</a></li>
</ul>
<h2 id="memd">me.md</h2>
<ul>
<li><em>怎么用 mutex 实现自旋锁？</em></li>
<li>最长回文字串长度</li>
<li>n 个人预约网球场，时间不同，求最少需要多少个网球场。</li>
<li>判断链表是否成环（龟兔赛跑）？</li>
<li>给出 N 个单词组成的熟词表，以及一篇全用小写英文书写的文章，请你按最早出现的顺序写出所有不在熟词表中的生词。</li>
<li>手写前缀树</li>
<li>123456789＝100，在里面插入＋或者—或者不插入符号，可以让等式成立？怎么暴力破解，以及大概需要遍历多少次？</li>
<li>二叉树的右视图</li>
<li>怎么使用 golang 实现 js 的 promise 语法？</li>
<li>给你一个 1T 的文件，里面都是 IP 字段，需要对这个文件基于 IP 地址从小到大进行排序？</li>
<li>AB 数组升序 中间数 lc4</li>
<li>从海量数据 (int 数据类型) 中找到前 50 的数字</li>
<li>最短回文串</li>
<li>算法题 10 进制转 7 进制</li>
<li>实现一个 hashmap，解决 hash 冲突问题，解决 hash 倾斜问题？</li>
<li>给你一字符串、abcabc 找出最长出现偶数次的字符串</li>
<li>写一个 golang 爬虫，自动伸缩，自适应流控，也就是说在对方限流时就减少并发数，没有限制时使用最大并发数？类似 TCP 的滑动窗口</li>
<li>全排列</li>
<li>怎么自己实现阻塞读并且并发安全的 map？</li>
<li>剑指 offer38: 字符串的排列</li>
<li>合并两个有序链表 (合并两个有序数组)</li>
<li>写个二分查找</li>
<li>手撕代码生产者消费者模型</li>
<li><em>手写实现 golang 中 map 的有序查找，且支持 add、支持 delete、支持迭代？构造一个辅助 slice</em></li>
<li>手写获取两个字符串的公共字符，返回一个字符串，需要返回的字符串不能重复</li>
<li>背包容量 150，7 个物品，每个物品重量价值不同，要求装入包中物品价值最大。</li>
<li>蛇形打印二叉树 (之字层序打印二叉树)</li>
<li>算法：找出字符串中不包含重复子串的最大长度</li>
<li>二叉树的中序遍历和层次遍历</li>
<li>通过中序遍历序列和先序序列恢复二叉树</li>
</ul>
<h2 id="qsmd">qs.md</h2>
<ul>
<li>redis 分布式锁</li>
<li>Get和Post区别</li>
<li>channel 的底层实现原理，（其实就是问 buf 是环形链表的数据结构）</li>
<li>假设一个a+b+c 的组合索引，只用 b+c 可以查到吗?</li>
<li>怎么实现的分布式爬虫</li>
<li>redis 常用数据类型，以及使用场景等等。各数据类型的底层数据结构是什么？比如 zset 底层实现是跳跃表 (skiplist)，讲讲 skiplist 为什么这么快。</li>
<li>Goroutine和线程的区别</li>
<li>kafka是如何保证不丢消息的</li>
<li>defer，这个一定要认真回答，defer 在什么时机会修改返回值。多个 defer 的顺序。</li>
<li>redis的分布式锁用过吗，怎么用的？</li>
<li>索引什么情况下失效，联合索引什么时候失效，覆盖索引、回表等这些，了解过吗？</li>
<li>tcp与udp区别，udp优点，适用场景</li>
<li>kafka如果消息堆积了如何处理</li>
<li>服务发现有哪些机制</li>
<li>Explain命令有什么用</li>
<li>Redis持久化的原理及优化</li>
<li>Go中的逃逸分析是什么</li>
<li>raft有什么特点</li>
<li>一条SQL语句在MySQL中如何执行的？</li>
<li>非聚集索引一定会回表查询吗？</li>
<li>go-micro 微服务架构怎么实现水平部署的，代码怎么实现</li>
<li>redis的网卡如果被打爆了，怎么办？redis缓存和本地缓存是怎么配合使用的，数据的一致性是如何解决的？（好未来架构师问的）</li>
<li>docker的实现原理说一下</li>
<li>Mysql事务隔离级别</li>
<li>进程之间为什么要进行通信呢</li>
<li>服务治理（包括但不限于：限流，熔断、负载、监控、鉴权、服务发现和注册等等）</li>
<li>Goroutine和Channel的作用分别是什么</li>
<li>MySQL中int(20)和char(20)以及varchar(20)的区别</li>
<li>间隙锁了解吗？唯一索引有间隙锁吗？</li>
<li>RWMutex使用过吗，主要用在什么样的场景，有哪几种方法，解决reader-writers的问题有几种实现方式，go中的RWMutex使用哪种方式？</li>
</ul>

    </article>
  </body>
</html>
]]></content:encoded>
      <author>nobody</author>
      <guid>1701205561</guid>
      <pubDate>Tue, 28 Nov 2023 21:06:01 +0000</pubDate>
    </item>
  </channel>
</rss>
